name: CI/CD for React App

on:
  push:
    branches:
      - '**'

jobs:
  deploy:
    if: github.ref_name == 'main'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.node_version }}

      - name: Install dependencies
        run: npm install

      - name: Build app
        run: npm run build

      - name: Check dist folder exists
        run: |
          if [ ! -d "dist" ]; then
            echo "dist folder not found."
            exit 1
          fi

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Upload to S3
        run: aws s3 sync dist s3://funbug --delete


  test:
    if: github.ref_name != 'main'
    runs-on: ubuntu-latest
    outputs:
      tests_passed: ${{ steps.set_output.outputs.tests_passed }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.node_version }}

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      - name: Run unit tests
        run: npm run test

      - name: Run e2e tests
        run: npm run test:e2e

      - name: Set test output
        id: set_output
        run: echo "tests_passed=true" >> $GITHUB_OUTPUT


  build:
    if: github.ref_name != 'main'
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Node.js setup
        uses: actions/setup-node@v3
        with:
          node-version: ${{ secrets.node_version }}

      - name: Install dependencies
        run: npm install

      - name: Run linter
        run: npm run lint

      - name: Build app
        run: npm run build
